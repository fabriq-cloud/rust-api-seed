name: Test, Static Analysis, and Containerization

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "crates/**"
      - "src/**"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - "Dockerfile"
      - ".github/workflows/containerize.yaml"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Dump Github context
        run: |
          echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      # Tool installation
      - uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
          override: true

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1

      # Run Tests

      - name: Test
        run: cargo test
        id: test

      # Static Analysis

      - run: cargo audit
      - run: cargo clippy --all-targets --all-features --workspace --no-deps -- -D warnings
      - run: cargo fmt --all -- --check

      # Containerize

      - name: Log into the container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata and create api-{sha} tag
        id: api_meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api
          tags: |
            type=sha,prefix=,format=long

      - name: Build and push docker API image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        id: api_build
        with:
          context: .
          file: Dockerfile
          target: api
          push: true
          tags: ${{ steps.api_meta.outputs.tags }}
          labels: ${{ steps.api_meta.outputs.labels }}

      - uses: robinraju/release-downloader@v1.6
        with:
          repository: "fabriq-cloud/fabriq"
          latest: true
          fileName: "fabriq"
      - name: Update api and gitops image config for this branch's deployment
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}

          chmod +x fabriq

          # FABRIQ_GITHUB_TOKEN is a PAT for a principal that is a member of the team for underlying workload.
          ./fabriq login ${{ secrets.FABRIQ_GITHUB_TOKEN }}

          ./fabriq workload create ${{ github.event.repository.name }} --team ${{ github.repository }} --template external-http-service
          ./fabriq deployment create $GIT_BRANCH --target westus3 --team ${{ github.repository }} --workload ${{ github.event.repository.name }} --hosts 1
          ./fabriq config create --deployment ${{ github.repository }}/${{ github.event.repository.name }}/$GIT_BRANCH image ${{ steps.api_meta.outputs.tags }}
